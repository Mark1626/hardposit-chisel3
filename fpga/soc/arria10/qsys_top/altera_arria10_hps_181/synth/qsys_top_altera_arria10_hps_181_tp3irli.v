// qsys_top_altera_arria10_hps_181_tp3irli.v

// This file was auto-generated from altera_hps_arria10_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 18.1 222

`timescale 1 ps / 1 ps
module qsys_top_altera_arria10_hps_181_tp3irli #(
		parameter F2S_Width = 6,
		parameter S2F_Width = 4
	) (
		output wire          h2f_rst_n,                 //         h2f_reset.reset_n
		input  wire [4095:0] emif_emif_to_hps,          //              emif.emif_to_hps
		output wire [4095:0] emif_hps_to_emif,          //                  .hps_to_emif
		input  wire          emif_emif_to_gp,           //                  .emif_to_gp
		output wire [1:0]    emif_gp_to_emif,           //                  .gp_to_emif
		input  wire          f2h_axi_clk,               //     f2h_axi_clock.clk
		input  wire          f2h_axi_rst,               //     f2h_axi_reset.reset_n
		input  wire [3:0]    f2h_AWID,                  //     f2h_axi_slave.awid
		input  wire [31:0]   f2h_AWADDR,                //                  .awaddr
		input  wire [3:0]    f2h_AWLEN,                 //                  .awlen
		input  wire [2:0]    f2h_AWSIZE,                //                  .awsize
		input  wire [1:0]    f2h_AWBURST,               //                  .awburst
		input  wire [1:0]    f2h_AWLOCK,                //                  .awlock
		input  wire [3:0]    f2h_AWCACHE,               //                  .awcache
		input  wire [2:0]    f2h_AWPROT,                //                  .awprot
		input  wire          f2h_AWVALID,               //                  .awvalid
		output wire          f2h_AWREADY,               //                  .awready
		input  wire [4:0]    f2h_AWUSER,                //                  .awuser
		input  wire [3:0]    f2h_WID,                   //                  .wid
		input  wire [127:0]  f2h_WDATA,                 //                  .wdata
		input  wire [15:0]   f2h_WSTRB,                 //                  .wstrb
		input  wire          f2h_WLAST,                 //                  .wlast
		input  wire          f2h_WVALID,                //                  .wvalid
		output wire          f2h_WREADY,                //                  .wready
		output wire [3:0]    f2h_BID,                   //                  .bid
		output wire [1:0]    f2h_BRESP,                 //                  .bresp
		output wire          f2h_BVALID,                //                  .bvalid
		input  wire          f2h_BREADY,                //                  .bready
		input  wire [3:0]    f2h_ARID,                  //                  .arid
		input  wire [31:0]   f2h_ARADDR,                //                  .araddr
		input  wire [3:0]    f2h_ARLEN,                 //                  .arlen
		input  wire [2:0]    f2h_ARSIZE,                //                  .arsize
		input  wire [1:0]    f2h_ARBURST,               //                  .arburst
		input  wire [1:0]    f2h_ARLOCK,                //                  .arlock
		input  wire [3:0]    f2h_ARCACHE,               //                  .arcache
		input  wire [2:0]    f2h_ARPROT,                //                  .arprot
		input  wire          f2h_ARVALID,               //                  .arvalid
		output wire          f2h_ARREADY,               //                  .arready
		input  wire [4:0]    f2h_ARUSER,                //                  .aruser
		output wire [3:0]    f2h_RID,                   //                  .rid
		output wire [127:0]  f2h_RDATA,                 //                  .rdata
		output wire [1:0]    f2h_RRESP,                 //                  .rresp
		output wire          f2h_RLAST,                 //                  .rlast
		output wire          f2h_RVALID,                //                  .rvalid
		input  wire          f2h_RREADY,                //                  .rready
		input  wire          h2f_lw_axi_clk,            //  h2f_lw_axi_clock.clk
		input  wire          h2f_lw_axi_rst,            //  h2f_lw_axi_reset.reset_n
		output wire [3:0]    h2f_lw_AWID,               // h2f_lw_axi_master.awid
		output wire [20:0]   h2f_lw_AWADDR,             //                  .awaddr
		output wire [3:0]    h2f_lw_AWLEN,              //                  .awlen
		output wire [2:0]    h2f_lw_AWSIZE,             //                  .awsize
		output wire [1:0]    h2f_lw_AWBURST,            //                  .awburst
		output wire [1:0]    h2f_lw_AWLOCK,             //                  .awlock
		output wire [3:0]    h2f_lw_AWCACHE,            //                  .awcache
		output wire [2:0]    h2f_lw_AWPROT,             //                  .awprot
		output wire          h2f_lw_AWVALID,            //                  .awvalid
		input  wire          h2f_lw_AWREADY,            //                  .awready
		output wire [4:0]    h2f_lw_AWUSER,             //                  .awuser
		output wire [3:0]    h2f_lw_WID,                //                  .wid
		output wire [31:0]   h2f_lw_WDATA,              //                  .wdata
		output wire [3:0]    h2f_lw_WSTRB,              //                  .wstrb
		output wire          h2f_lw_WLAST,              //                  .wlast
		output wire          h2f_lw_WVALID,             //                  .wvalid
		input  wire          h2f_lw_WREADY,             //                  .wready
		input  wire [3:0]    h2f_lw_BID,                //                  .bid
		input  wire [1:0]    h2f_lw_BRESP,              //                  .bresp
		input  wire          h2f_lw_BVALID,             //                  .bvalid
		output wire          h2f_lw_BREADY,             //                  .bready
		output wire [3:0]    h2f_lw_ARID,               //                  .arid
		output wire [20:0]   h2f_lw_ARADDR,             //                  .araddr
		output wire [3:0]    h2f_lw_ARLEN,              //                  .arlen
		output wire [2:0]    h2f_lw_ARSIZE,             //                  .arsize
		output wire [1:0]    h2f_lw_ARBURST,            //                  .arburst
		output wire [1:0]    h2f_lw_ARLOCK,             //                  .arlock
		output wire [3:0]    h2f_lw_ARCACHE,            //                  .arcache
		output wire [2:0]    h2f_lw_ARPROT,             //                  .arprot
		output wire          h2f_lw_ARVALID,            //                  .arvalid
		input  wire          h2f_lw_ARREADY,            //                  .arready
		output wire [4:0]    h2f_lw_ARUSER,             //                  .aruser
		input  wire [3:0]    h2f_lw_RID,                //                  .rid
		input  wire [31:0]   h2f_lw_RDATA,              //                  .rdata
		input  wire [1:0]    h2f_lw_RRESP,              //                  .rresp
		input  wire          h2f_lw_RLAST,              //                  .rlast
		input  wire          h2f_lw_RVALID,             //                  .rvalid
		output wire          h2f_lw_RREADY,             //                  .rready
		input  wire          h2f_axi_clk,               //     h2f_axi_clock.clk
		input  wire          h2f_axi_rst,               //     h2f_axi_reset.reset_n
		output wire [3:0]    h2f_AWID,                  //    h2f_axi_master.awid
		output wire [31:0]   h2f_AWADDR,                //                  .awaddr
		output wire [3:0]    h2f_AWLEN,                 //                  .awlen
		output wire [2:0]    h2f_AWSIZE,                //                  .awsize
		output wire [1:0]    h2f_AWBURST,               //                  .awburst
		output wire [1:0]    h2f_AWLOCK,                //                  .awlock
		output wire [3:0]    h2f_AWCACHE,               //                  .awcache
		output wire [2:0]    h2f_AWPROT,                //                  .awprot
		output wire          h2f_AWVALID,               //                  .awvalid
		input  wire          h2f_AWREADY,               //                  .awready
		output wire [4:0]    h2f_AWUSER,                //                  .awuser
		output wire [3:0]    h2f_WID,                   //                  .wid
		output wire [31:0]   h2f_WDATA,                 //                  .wdata
		output wire [3:0]    h2f_WSTRB,                 //                  .wstrb
		output wire          h2f_WLAST,                 //                  .wlast
		output wire          h2f_WVALID,                //                  .wvalid
		input  wire          h2f_WREADY,                //                  .wready
		input  wire [3:0]    h2f_BID,                   //                  .bid
		input  wire [1:0]    h2f_BRESP,                 //                  .bresp
		input  wire          h2f_BVALID,                //                  .bvalid
		output wire          h2f_BREADY,                //                  .bready
		output wire [3:0]    h2f_ARID,                  //                  .arid
		output wire [31:0]   h2f_ARADDR,                //                  .araddr
		output wire [3:0]    h2f_ARLEN,                 //                  .arlen
		output wire [2:0]    h2f_ARSIZE,                //                  .arsize
		output wire [1:0]    h2f_ARBURST,               //                  .arburst
		output wire [1:0]    h2f_ARLOCK,                //                  .arlock
		output wire [3:0]    h2f_ARCACHE,               //                  .arcache
		output wire [2:0]    h2f_ARPROT,                //                  .arprot
		output wire          h2f_ARVALID,               //                  .arvalid
		input  wire          h2f_ARREADY,               //                  .arready
		output wire [4:0]    h2f_ARUSER,                //                  .aruser
		input  wire [3:0]    h2f_RID,                   //                  .rid
		input  wire [31:0]   h2f_RDATA,                 //                  .rdata
		input  wire [1:0]    h2f_RRESP,                 //                  .rresp
		input  wire          h2f_RLAST,                 //                  .rlast
		input  wire          h2f_RVALID,                //                  .rvalid
		output wire          h2f_RREADY,                //                  .rready
		input  wire          f2sdram0_clk,              //    f2sdram0_clock.clk
		input  wire          f2s_sdram0_rst,            //    f2sdram0_reset.reset_n
		input  wire [31:0]   f2sdram0_ARADDR,           //     f2sdram0_data.araddr
		input  wire [1:0]    f2sdram0_ARBURST,          //                  .arburst
		input  wire [3:0]    f2sdram0_ARCACHE,          //                  .arcache
		input  wire [3:0]    f2sdram0_ARID,             //                  .arid
		input  wire [3:0]    f2sdram0_ARLEN,            //                  .arlen
		input  wire [1:0]    f2sdram0_ARLOCK,           //                  .arlock
		input  wire [2:0]    f2sdram0_ARPROT,           //                  .arprot
		output wire          f2sdram0_ARREADY,          //                  .arready
		input  wire [2:0]    f2sdram0_ARSIZE,           //                  .arsize
		input  wire [4:0]    f2sdram0_ARUSER,           //                  .aruser
		input  wire          f2sdram0_ARVALID,          //                  .arvalid
		input  wire [31:0]   f2sdram0_AWADDR,           //                  .awaddr
		input  wire [1:0]    f2sdram0_AWBURST,          //                  .awburst
		input  wire [3:0]    f2sdram0_AWCACHE,          //                  .awcache
		input  wire [3:0]    f2sdram0_AWID,             //                  .awid
		input  wire [3:0]    f2sdram0_AWLEN,            //                  .awlen
		input  wire [1:0]    f2sdram0_AWLOCK,           //                  .awlock
		input  wire [2:0]    f2sdram0_AWPROT,           //                  .awprot
		output wire          f2sdram0_AWREADY,          //                  .awready
		input  wire [2:0]    f2sdram0_AWSIZE,           //                  .awsize
		input  wire [4:0]    f2sdram0_AWUSER,           //                  .awuser
		input  wire          f2sdram0_AWVALID,          //                  .awvalid
		input  wire [127:0]  f2sdram0_WDATA,            //                  .wdata
		input  wire [3:0]    f2sdram0_WID,              //                  .wid
		input  wire          f2sdram0_WLAST,            //                  .wlast
		output wire          f2sdram0_WREADY,           //                  .wready
		input  wire [15:0]   f2sdram0_WSTRB,            //                  .wstrb
		input  wire          f2sdram0_WVALID,           //                  .wvalid
		output wire [3:0]    f2sdram0_BID,              //                  .bid
		input  wire          f2sdram0_BREADY,           //                  .bready
		output wire [1:0]    f2sdram0_BRESP,            //                  .bresp
		output wire          f2sdram0_BVALID,           //                  .bvalid
		output wire [127:0]  f2sdram0_RDATA,            //                  .rdata
		output wire [3:0]    f2sdram0_RID,              //                  .rid
		output wire          f2sdram0_RLAST,            //                  .rlast
		input  wire          f2sdram0_RREADY,           //                  .rready
		output wire [1:0]    f2sdram0_RRESP,            //                  .rresp
		output wire          f2sdram0_RVALID,           //                  .rvalid
		input  wire          f2sdram2_clk,              //    f2sdram2_clock.clk
		input  wire          f2s_sdram2_rst,            //    f2sdram2_reset.reset_n
		input  wire [31:0]   f2sdram2_ARADDR,           //     f2sdram2_data.araddr
		input  wire [1:0]    f2sdram2_ARBURST,          //                  .arburst
		input  wire [3:0]    f2sdram2_ARCACHE,          //                  .arcache
		input  wire [3:0]    f2sdram2_ARID,             //                  .arid
		input  wire [3:0]    f2sdram2_ARLEN,            //                  .arlen
		input  wire [1:0]    f2sdram2_ARLOCK,           //                  .arlock
		input  wire [2:0]    f2sdram2_ARPROT,           //                  .arprot
		output wire          f2sdram2_ARREADY,          //                  .arready
		input  wire [2:0]    f2sdram2_ARSIZE,           //                  .arsize
		input  wire [4:0]    f2sdram2_ARUSER,           //                  .aruser
		input  wire          f2sdram2_ARVALID,          //                  .arvalid
		input  wire [31:0]   f2sdram2_AWADDR,           //                  .awaddr
		input  wire [1:0]    f2sdram2_AWBURST,          //                  .awburst
		input  wire [3:0]    f2sdram2_AWCACHE,          //                  .awcache
		input  wire [3:0]    f2sdram2_AWID,             //                  .awid
		input  wire [3:0]    f2sdram2_AWLEN,            //                  .awlen
		input  wire [1:0]    f2sdram2_AWLOCK,           //                  .awlock
		input  wire [2:0]    f2sdram2_AWPROT,           //                  .awprot
		output wire          f2sdram2_AWREADY,          //                  .awready
		input  wire [2:0]    f2sdram2_AWSIZE,           //                  .awsize
		input  wire [4:0]    f2sdram2_AWUSER,           //                  .awuser
		input  wire          f2sdram2_AWVALID,          //                  .awvalid
		input  wire [127:0]  f2sdram2_WDATA,            //                  .wdata
		input  wire [3:0]    f2sdram2_WID,              //                  .wid
		input  wire          f2sdram2_WLAST,            //                  .wlast
		output wire          f2sdram2_WREADY,           //                  .wready
		input  wire [15:0]   f2sdram2_WSTRB,            //                  .wstrb
		input  wire          f2sdram2_WVALID,           //                  .wvalid
		output wire [3:0]    f2sdram2_BID,              //                  .bid
		input  wire          f2sdram2_BREADY,           //                  .bready
		output wire [1:0]    f2sdram2_BRESP,            //                  .bresp
		output wire          f2sdram2_BVALID,           //                  .bvalid
		output wire [127:0]  f2sdram2_RDATA,            //                  .rdata
		output wire [3:0]    f2sdram2_RID,              //                  .rid
		output wire          f2sdram2_RLAST,            //                  .rlast
		input  wire          f2sdram2_RREADY,           //                  .rready
		output wire [1:0]    f2sdram2_RRESP,            //                  .rresp
		output wire          f2sdram2_RVALID,           //                  .rvalid
		output wire          hps_io_phery_emac0_TX_CLK, //            hps_io.hps_io_phery_emac0_TX_CLK
		output wire          hps_io_phery_emac0_TXD0,   //                  .hps_io_phery_emac0_TXD0
		output wire          hps_io_phery_emac0_TXD1,   //                  .hps_io_phery_emac0_TXD1
		output wire          hps_io_phery_emac0_TXD2,   //                  .hps_io_phery_emac0_TXD2
		output wire          hps_io_phery_emac0_TXD3,   //                  .hps_io_phery_emac0_TXD3
		input  wire          hps_io_phery_emac0_RX_CTL, //                  .hps_io_phery_emac0_RX_CTL
		output wire          hps_io_phery_emac0_TX_CTL, //                  .hps_io_phery_emac0_TX_CTL
		input  wire          hps_io_phery_emac0_RX_CLK, //                  .hps_io_phery_emac0_RX_CLK
		input  wire          hps_io_phery_emac0_RXD0,   //                  .hps_io_phery_emac0_RXD0
		input  wire          hps_io_phery_emac0_RXD1,   //                  .hps_io_phery_emac0_RXD1
		input  wire          hps_io_phery_emac0_RXD2,   //                  .hps_io_phery_emac0_RXD2
		input  wire          hps_io_phery_emac0_RXD3,   //                  .hps_io_phery_emac0_RXD3
		inout  wire          hps_io_phery_emac0_MDIO,   //                  .hps_io_phery_emac0_MDIO
		output wire          hps_io_phery_emac0_MDC,    //                  .hps_io_phery_emac0_MDC
		inout  wire          hps_io_phery_sdmmc_CMD,    //                  .hps_io_phery_sdmmc_CMD
		inout  wire          hps_io_phery_sdmmc_D0,     //                  .hps_io_phery_sdmmc_D0
		inout  wire          hps_io_phery_sdmmc_D1,     //                  .hps_io_phery_sdmmc_D1
		inout  wire          hps_io_phery_sdmmc_D2,     //                  .hps_io_phery_sdmmc_D2
		inout  wire          hps_io_phery_sdmmc_D3,     //                  .hps_io_phery_sdmmc_D3
		inout  wire          hps_io_phery_sdmmc_D4,     //                  .hps_io_phery_sdmmc_D4
		inout  wire          hps_io_phery_sdmmc_D5,     //                  .hps_io_phery_sdmmc_D5
		inout  wire          hps_io_phery_sdmmc_D6,     //                  .hps_io_phery_sdmmc_D6
		inout  wire          hps_io_phery_sdmmc_D7,     //                  .hps_io_phery_sdmmc_D7
		output wire          hps_io_phery_sdmmc_CCLK,   //                  .hps_io_phery_sdmmc_CCLK
		inout  wire          hps_io_phery_usb0_DATA0,   //                  .hps_io_phery_usb0_DATA0
		inout  wire          hps_io_phery_usb0_DATA1,   //                  .hps_io_phery_usb0_DATA1
		inout  wire          hps_io_phery_usb0_DATA2,   //                  .hps_io_phery_usb0_DATA2
		inout  wire          hps_io_phery_usb0_DATA3,   //                  .hps_io_phery_usb0_DATA3
		inout  wire          hps_io_phery_usb0_DATA4,   //                  .hps_io_phery_usb0_DATA4
		inout  wire          hps_io_phery_usb0_DATA5,   //                  .hps_io_phery_usb0_DATA5
		inout  wire          hps_io_phery_usb0_DATA6,   //                  .hps_io_phery_usb0_DATA6
		inout  wire          hps_io_phery_usb0_DATA7,   //                  .hps_io_phery_usb0_DATA7
		input  wire          hps_io_phery_usb0_CLK,     //                  .hps_io_phery_usb0_CLK
		output wire          hps_io_phery_usb0_STP,     //                  .hps_io_phery_usb0_STP
		input  wire          hps_io_phery_usb0_DIR,     //                  .hps_io_phery_usb0_DIR
		input  wire          hps_io_phery_usb0_NXT,     //                  .hps_io_phery_usb0_NXT
		output wire          hps_io_phery_spim1_CLK,    //                  .hps_io_phery_spim1_CLK
		output wire          hps_io_phery_spim1_MOSI,   //                  .hps_io_phery_spim1_MOSI
		input  wire          hps_io_phery_spim1_MISO,   //                  .hps_io_phery_spim1_MISO
		output wire          hps_io_phery_spim1_SS0_N,  //                  .hps_io_phery_spim1_SS0_N
		output wire          hps_io_phery_spim1_SS1_N,  //                  .hps_io_phery_spim1_SS1_N
		output wire          hps_io_phery_trace_CLK,    //                  .hps_io_phery_trace_CLK
		output wire          hps_io_phery_trace_D0,     //                  .hps_io_phery_trace_D0
		output wire          hps_io_phery_trace_D1,     //                  .hps_io_phery_trace_D1
		output wire          hps_io_phery_trace_D2,     //                  .hps_io_phery_trace_D2
		output wire          hps_io_phery_trace_D3,     //                  .hps_io_phery_trace_D3
		input  wire          hps_io_phery_uart1_RX,     //                  .hps_io_phery_uart1_RX
		output wire          hps_io_phery_uart1_TX,     //                  .hps_io_phery_uart1_TX
		inout  wire          hps_io_phery_i2c1_SDA,     //                  .hps_io_phery_i2c1_SDA
		inout  wire          hps_io_phery_i2c1_SCL,     //                  .hps_io_phery_i2c1_SCL
		inout  wire          hps_io_gpio_gpio1_io5,     //                  .hps_io_gpio_gpio1_io5
		inout  wire          hps_io_gpio_gpio1_io14,    //                  .hps_io_gpio_gpio1_io14
		inout  wire          hps_io_gpio_gpio1_io16,    //                  .hps_io_gpio_gpio1_io16
		inout  wire          hps_io_gpio_gpio1_io17     //                  .hps_io_gpio_gpio1_io17
	);

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (F2S_Width != 6)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					f2s_width_check ( .error(1'b1) );
		end
		if (S2F_Width != 4)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					s2f_width_check ( .error(1'b1) );
		end
	endgenerate

	qsys_top_altera_arria10_interface_generator_140_q5fiwxi fpga_interfaces (
		.h2f_rst_n        (h2f_rst_n),        //  output,     width = 1,         h2f_reset.reset_n
		.emif_emif_to_hps (emif_emif_to_hps), //   input,  width = 4096,              emif.emif_to_hps
		.emif_hps_to_emif (emif_hps_to_emif), //  output,  width = 4096,                  .hps_to_emif
		.emif_emif_to_gp  (emif_emif_to_gp),  //   input,     width = 1,                  .emif_to_gp
		.emif_gp_to_emif  (emif_gp_to_emif),  //  output,     width = 2,                  .gp_to_emif
		.f2h_axi_clk      (f2h_axi_clk),      //   input,     width = 1,     f2h_axi_clock.clk
		.f2h_axi_rst      (f2h_axi_rst),      //   input,     width = 1,     f2h_axi_reset.reset_n
		.f2h_AWID         (f2h_AWID),         //   input,     width = 4,     f2h_axi_slave.awid
		.f2h_AWADDR       (f2h_AWADDR),       //   input,    width = 32,                  .awaddr
		.f2h_AWLEN        (f2h_AWLEN),        //   input,     width = 4,                  .awlen
		.f2h_AWSIZE       (f2h_AWSIZE),       //   input,     width = 3,                  .awsize
		.f2h_AWBURST      (f2h_AWBURST),      //   input,     width = 2,                  .awburst
		.f2h_AWLOCK       (f2h_AWLOCK),       //   input,     width = 2,                  .awlock
		.f2h_AWCACHE      (f2h_AWCACHE),      //   input,     width = 4,                  .awcache
		.f2h_AWPROT       (f2h_AWPROT),       //   input,     width = 3,                  .awprot
		.f2h_AWVALID      (f2h_AWVALID),      //   input,     width = 1,                  .awvalid
		.f2h_AWREADY      (f2h_AWREADY),      //  output,     width = 1,                  .awready
		.f2h_AWUSER       (f2h_AWUSER),       //   input,     width = 5,                  .awuser
		.f2h_WID          (f2h_WID),          //   input,     width = 4,                  .wid
		.f2h_WDATA        (f2h_WDATA),        //   input,   width = 128,                  .wdata
		.f2h_WSTRB        (f2h_WSTRB),        //   input,    width = 16,                  .wstrb
		.f2h_WLAST        (f2h_WLAST),        //   input,     width = 1,                  .wlast
		.f2h_WVALID       (f2h_WVALID),       //   input,     width = 1,                  .wvalid
		.f2h_WREADY       (f2h_WREADY),       //  output,     width = 1,                  .wready
		.f2h_BID          (f2h_BID),          //  output,     width = 4,                  .bid
		.f2h_BRESP        (f2h_BRESP),        //  output,     width = 2,                  .bresp
		.f2h_BVALID       (f2h_BVALID),       //  output,     width = 1,                  .bvalid
		.f2h_BREADY       (f2h_BREADY),       //   input,     width = 1,                  .bready
		.f2h_ARID         (f2h_ARID),         //   input,     width = 4,                  .arid
		.f2h_ARADDR       (f2h_ARADDR),       //   input,    width = 32,                  .araddr
		.f2h_ARLEN        (f2h_ARLEN),        //   input,     width = 4,                  .arlen
		.f2h_ARSIZE       (f2h_ARSIZE),       //   input,     width = 3,                  .arsize
		.f2h_ARBURST      (f2h_ARBURST),      //   input,     width = 2,                  .arburst
		.f2h_ARLOCK       (f2h_ARLOCK),       //   input,     width = 2,                  .arlock
		.f2h_ARCACHE      (f2h_ARCACHE),      //   input,     width = 4,                  .arcache
		.f2h_ARPROT       (f2h_ARPROT),       //   input,     width = 3,                  .arprot
		.f2h_ARVALID      (f2h_ARVALID),      //   input,     width = 1,                  .arvalid
		.f2h_ARREADY      (f2h_ARREADY),      //  output,     width = 1,                  .arready
		.f2h_ARUSER       (f2h_ARUSER),       //   input,     width = 5,                  .aruser
		.f2h_RID          (f2h_RID),          //  output,     width = 4,                  .rid
		.f2h_RDATA        (f2h_RDATA),        //  output,   width = 128,                  .rdata
		.f2h_RRESP        (f2h_RRESP),        //  output,     width = 2,                  .rresp
		.f2h_RLAST        (f2h_RLAST),        //  output,     width = 1,                  .rlast
		.f2h_RVALID       (f2h_RVALID),       //  output,     width = 1,                  .rvalid
		.f2h_RREADY       (f2h_RREADY),       //   input,     width = 1,                  .rready
		.h2f_lw_axi_clk   (h2f_lw_axi_clk),   //   input,     width = 1,  h2f_lw_axi_clock.clk
		.h2f_lw_axi_rst   (h2f_lw_axi_rst),   //   input,     width = 1,  h2f_lw_axi_reset.reset_n
		.h2f_lw_AWID      (h2f_lw_AWID),      //  output,     width = 4, h2f_lw_axi_master.awid
		.h2f_lw_AWADDR    (h2f_lw_AWADDR),    //  output,    width = 21,                  .awaddr
		.h2f_lw_AWLEN     (h2f_lw_AWLEN),     //  output,     width = 4,                  .awlen
		.h2f_lw_AWSIZE    (h2f_lw_AWSIZE),    //  output,     width = 3,                  .awsize
		.h2f_lw_AWBURST   (h2f_lw_AWBURST),   //  output,     width = 2,                  .awburst
		.h2f_lw_AWLOCK    (h2f_lw_AWLOCK),    //  output,     width = 2,                  .awlock
		.h2f_lw_AWCACHE   (h2f_lw_AWCACHE),   //  output,     width = 4,                  .awcache
		.h2f_lw_AWPROT    (h2f_lw_AWPROT),    //  output,     width = 3,                  .awprot
		.h2f_lw_AWVALID   (h2f_lw_AWVALID),   //  output,     width = 1,                  .awvalid
		.h2f_lw_AWREADY   (h2f_lw_AWREADY),   //   input,     width = 1,                  .awready
		.h2f_lw_AWUSER    (h2f_lw_AWUSER),    //  output,     width = 5,                  .awuser
		.h2f_lw_WID       (h2f_lw_WID),       //  output,     width = 4,                  .wid
		.h2f_lw_WDATA     (h2f_lw_WDATA),     //  output,    width = 32,                  .wdata
		.h2f_lw_WSTRB     (h2f_lw_WSTRB),     //  output,     width = 4,                  .wstrb
		.h2f_lw_WLAST     (h2f_lw_WLAST),     //  output,     width = 1,                  .wlast
		.h2f_lw_WVALID    (h2f_lw_WVALID),    //  output,     width = 1,                  .wvalid
		.h2f_lw_WREADY    (h2f_lw_WREADY),    //   input,     width = 1,                  .wready
		.h2f_lw_BID       (h2f_lw_BID),       //   input,     width = 4,                  .bid
		.h2f_lw_BRESP     (h2f_lw_BRESP),     //   input,     width = 2,                  .bresp
		.h2f_lw_BVALID    (h2f_lw_BVALID),    //   input,     width = 1,                  .bvalid
		.h2f_lw_BREADY    (h2f_lw_BREADY),    //  output,     width = 1,                  .bready
		.h2f_lw_ARID      (h2f_lw_ARID),      //  output,     width = 4,                  .arid
		.h2f_lw_ARADDR    (h2f_lw_ARADDR),    //  output,    width = 21,                  .araddr
		.h2f_lw_ARLEN     (h2f_lw_ARLEN),     //  output,     width = 4,                  .arlen
		.h2f_lw_ARSIZE    (h2f_lw_ARSIZE),    //  output,     width = 3,                  .arsize
		.h2f_lw_ARBURST   (h2f_lw_ARBURST),   //  output,     width = 2,                  .arburst
		.h2f_lw_ARLOCK    (h2f_lw_ARLOCK),    //  output,     width = 2,                  .arlock
		.h2f_lw_ARCACHE   (h2f_lw_ARCACHE),   //  output,     width = 4,                  .arcache
		.h2f_lw_ARPROT    (h2f_lw_ARPROT),    //  output,     width = 3,                  .arprot
		.h2f_lw_ARVALID   (h2f_lw_ARVALID),   //  output,     width = 1,                  .arvalid
		.h2f_lw_ARREADY   (h2f_lw_ARREADY),   //   input,     width = 1,                  .arready
		.h2f_lw_ARUSER    (h2f_lw_ARUSER),    //  output,     width = 5,                  .aruser
		.h2f_lw_RID       (h2f_lw_RID),       //   input,     width = 4,                  .rid
		.h2f_lw_RDATA     (h2f_lw_RDATA),     //   input,    width = 32,                  .rdata
		.h2f_lw_RRESP     (h2f_lw_RRESP),     //   input,     width = 2,                  .rresp
		.h2f_lw_RLAST     (h2f_lw_RLAST),     //   input,     width = 1,                  .rlast
		.h2f_lw_RVALID    (h2f_lw_RVALID),    //   input,     width = 1,                  .rvalid
		.h2f_lw_RREADY    (h2f_lw_RREADY),    //  output,     width = 1,                  .rready
		.h2f_axi_clk      (h2f_axi_clk),      //   input,     width = 1,     h2f_axi_clock.clk
		.h2f_axi_rst      (h2f_axi_rst),      //   input,     width = 1,     h2f_axi_reset.reset_n
		.h2f_AWID         (h2f_AWID),         //  output,     width = 4,    h2f_axi_master.awid
		.h2f_AWADDR       (h2f_AWADDR),       //  output,    width = 32,                  .awaddr
		.h2f_AWLEN        (h2f_AWLEN),        //  output,     width = 4,                  .awlen
		.h2f_AWSIZE       (h2f_AWSIZE),       //  output,     width = 3,                  .awsize
		.h2f_AWBURST      (h2f_AWBURST),      //  output,     width = 2,                  .awburst
		.h2f_AWLOCK       (h2f_AWLOCK),       //  output,     width = 2,                  .awlock
		.h2f_AWCACHE      (h2f_AWCACHE),      //  output,     width = 4,                  .awcache
		.h2f_AWPROT       (h2f_AWPROT),       //  output,     width = 3,                  .awprot
		.h2f_AWVALID      (h2f_AWVALID),      //  output,     width = 1,                  .awvalid
		.h2f_AWREADY      (h2f_AWREADY),      //   input,     width = 1,                  .awready
		.h2f_AWUSER       (h2f_AWUSER),       //  output,     width = 5,                  .awuser
		.h2f_WID          (h2f_WID),          //  output,     width = 4,                  .wid
		.h2f_WDATA        (h2f_WDATA),        //  output,    width = 32,                  .wdata
		.h2f_WSTRB        (h2f_WSTRB),        //  output,     width = 4,                  .wstrb
		.h2f_WLAST        (h2f_WLAST),        //  output,     width = 1,                  .wlast
		.h2f_WVALID       (h2f_WVALID),       //  output,     width = 1,                  .wvalid
		.h2f_WREADY       (h2f_WREADY),       //   input,     width = 1,                  .wready
		.h2f_BID          (h2f_BID),          //   input,     width = 4,                  .bid
		.h2f_BRESP        (h2f_BRESP),        //   input,     width = 2,                  .bresp
		.h2f_BVALID       (h2f_BVALID),       //   input,     width = 1,                  .bvalid
		.h2f_BREADY       (h2f_BREADY),       //  output,     width = 1,                  .bready
		.h2f_ARID         (h2f_ARID),         //  output,     width = 4,                  .arid
		.h2f_ARADDR       (h2f_ARADDR),       //  output,    width = 32,                  .araddr
		.h2f_ARLEN        (h2f_ARLEN),        //  output,     width = 4,                  .arlen
		.h2f_ARSIZE       (h2f_ARSIZE),       //  output,     width = 3,                  .arsize
		.h2f_ARBURST      (h2f_ARBURST),      //  output,     width = 2,                  .arburst
		.h2f_ARLOCK       (h2f_ARLOCK),       //  output,     width = 2,                  .arlock
		.h2f_ARCACHE      (h2f_ARCACHE),      //  output,     width = 4,                  .arcache
		.h2f_ARPROT       (h2f_ARPROT),       //  output,     width = 3,                  .arprot
		.h2f_ARVALID      (h2f_ARVALID),      //  output,     width = 1,                  .arvalid
		.h2f_ARREADY      (h2f_ARREADY),      //   input,     width = 1,                  .arready
		.h2f_ARUSER       (h2f_ARUSER),       //  output,     width = 5,                  .aruser
		.h2f_RID          (h2f_RID),          //   input,     width = 4,                  .rid
		.h2f_RDATA        (h2f_RDATA),        //   input,    width = 32,                  .rdata
		.h2f_RRESP        (h2f_RRESP),        //   input,     width = 2,                  .rresp
		.h2f_RLAST        (h2f_RLAST),        //   input,     width = 1,                  .rlast
		.h2f_RVALID       (h2f_RVALID),       //   input,     width = 1,                  .rvalid
		.h2f_RREADY       (h2f_RREADY),       //  output,     width = 1,                  .rready
		.f2sdram0_clk     (f2sdram0_clk),     //   input,     width = 1,    f2sdram0_clock.clk
		.f2s_sdram0_rst   (f2s_sdram0_rst),   //   input,     width = 1,    f2sdram0_reset.reset_n
		.f2sdram0_ARADDR  (f2sdram0_ARADDR),  //   input,    width = 32,     f2sdram0_data.araddr
		.f2sdram0_ARBURST (f2sdram0_ARBURST), //   input,     width = 2,                  .arburst
		.f2sdram0_ARCACHE (f2sdram0_ARCACHE), //   input,     width = 4,                  .arcache
		.f2sdram0_ARID    (f2sdram0_ARID),    //   input,     width = 4,                  .arid
		.f2sdram0_ARLEN   (f2sdram0_ARLEN),   //   input,     width = 4,                  .arlen
		.f2sdram0_ARLOCK  (f2sdram0_ARLOCK),  //   input,     width = 2,                  .arlock
		.f2sdram0_ARPROT  (f2sdram0_ARPROT),  //   input,     width = 3,                  .arprot
		.f2sdram0_ARREADY (f2sdram0_ARREADY), //  output,     width = 1,                  .arready
		.f2sdram0_ARSIZE  (f2sdram0_ARSIZE),  //   input,     width = 3,                  .arsize
		.f2sdram0_ARUSER  (f2sdram0_ARUSER),  //   input,     width = 5,                  .aruser
		.f2sdram0_ARVALID (f2sdram0_ARVALID), //   input,     width = 1,                  .arvalid
		.f2sdram0_AWADDR  (f2sdram0_AWADDR),  //   input,    width = 32,                  .awaddr
		.f2sdram0_AWBURST (f2sdram0_AWBURST), //   input,     width = 2,                  .awburst
		.f2sdram0_AWCACHE (f2sdram0_AWCACHE), //   input,     width = 4,                  .awcache
		.f2sdram0_AWID    (f2sdram0_AWID),    //   input,     width = 4,                  .awid
		.f2sdram0_AWLEN   (f2sdram0_AWLEN),   //   input,     width = 4,                  .awlen
		.f2sdram0_AWLOCK  (f2sdram0_AWLOCK),  //   input,     width = 2,                  .awlock
		.f2sdram0_AWPROT  (f2sdram0_AWPROT),  //   input,     width = 3,                  .awprot
		.f2sdram0_AWREADY (f2sdram0_AWREADY), //  output,     width = 1,                  .awready
		.f2sdram0_AWSIZE  (f2sdram0_AWSIZE),  //   input,     width = 3,                  .awsize
		.f2sdram0_AWUSER  (f2sdram0_AWUSER),  //   input,     width = 5,                  .awuser
		.f2sdram0_AWVALID (f2sdram0_AWVALID), //   input,     width = 1,                  .awvalid
		.f2sdram0_WDATA   (f2sdram0_WDATA),   //   input,   width = 128,                  .wdata
		.f2sdram0_WID     (f2sdram0_WID),     //   input,     width = 4,                  .wid
		.f2sdram0_WLAST   (f2sdram0_WLAST),   //   input,     width = 1,                  .wlast
		.f2sdram0_WREADY  (f2sdram0_WREADY),  //  output,     width = 1,                  .wready
		.f2sdram0_WSTRB   (f2sdram0_WSTRB),   //   input,    width = 16,                  .wstrb
		.f2sdram0_WVALID  (f2sdram0_WVALID),  //   input,     width = 1,                  .wvalid
		.f2sdram0_BID     (f2sdram0_BID),     //  output,     width = 4,                  .bid
		.f2sdram0_BREADY  (f2sdram0_BREADY),  //   input,     width = 1,                  .bready
		.f2sdram0_BRESP   (f2sdram0_BRESP),   //  output,     width = 2,                  .bresp
		.f2sdram0_BVALID  (f2sdram0_BVALID),  //  output,     width = 1,                  .bvalid
		.f2sdram0_RDATA   (f2sdram0_RDATA),   //  output,   width = 128,                  .rdata
		.f2sdram0_RID     (f2sdram0_RID),     //  output,     width = 4,                  .rid
		.f2sdram0_RLAST   (f2sdram0_RLAST),   //  output,     width = 1,                  .rlast
		.f2sdram0_RREADY  (f2sdram0_RREADY),  //   input,     width = 1,                  .rready
		.f2sdram0_RRESP   (f2sdram0_RRESP),   //  output,     width = 2,                  .rresp
		.f2sdram0_RVALID  (f2sdram0_RVALID),  //  output,     width = 1,                  .rvalid
		.f2sdram2_clk     (f2sdram2_clk),     //   input,     width = 1,    f2sdram2_clock.clk
		.f2s_sdram2_rst   (f2s_sdram2_rst),   //   input,     width = 1,    f2sdram2_reset.reset_n
		.f2sdram2_ARADDR  (f2sdram2_ARADDR),  //   input,    width = 32,     f2sdram2_data.araddr
		.f2sdram2_ARBURST (f2sdram2_ARBURST), //   input,     width = 2,                  .arburst
		.f2sdram2_ARCACHE (f2sdram2_ARCACHE), //   input,     width = 4,                  .arcache
		.f2sdram2_ARID    (f2sdram2_ARID),    //   input,     width = 4,                  .arid
		.f2sdram2_ARLEN   (f2sdram2_ARLEN),   //   input,     width = 4,                  .arlen
		.f2sdram2_ARLOCK  (f2sdram2_ARLOCK),  //   input,     width = 2,                  .arlock
		.f2sdram2_ARPROT  (f2sdram2_ARPROT),  //   input,     width = 3,                  .arprot
		.f2sdram2_ARREADY (f2sdram2_ARREADY), //  output,     width = 1,                  .arready
		.f2sdram2_ARSIZE  (f2sdram2_ARSIZE),  //   input,     width = 3,                  .arsize
		.f2sdram2_ARUSER  (f2sdram2_ARUSER),  //   input,     width = 5,                  .aruser
		.f2sdram2_ARVALID (f2sdram2_ARVALID), //   input,     width = 1,                  .arvalid
		.f2sdram2_AWADDR  (f2sdram2_AWADDR),  //   input,    width = 32,                  .awaddr
		.f2sdram2_AWBURST (f2sdram2_AWBURST), //   input,     width = 2,                  .awburst
		.f2sdram2_AWCACHE (f2sdram2_AWCACHE), //   input,     width = 4,                  .awcache
		.f2sdram2_AWID    (f2sdram2_AWID),    //   input,     width = 4,                  .awid
		.f2sdram2_AWLEN   (f2sdram2_AWLEN),   //   input,     width = 4,                  .awlen
		.f2sdram2_AWLOCK  (f2sdram2_AWLOCK),  //   input,     width = 2,                  .awlock
		.f2sdram2_AWPROT  (f2sdram2_AWPROT),  //   input,     width = 3,                  .awprot
		.f2sdram2_AWREADY (f2sdram2_AWREADY), //  output,     width = 1,                  .awready
		.f2sdram2_AWSIZE  (f2sdram2_AWSIZE),  //   input,     width = 3,                  .awsize
		.f2sdram2_AWUSER  (f2sdram2_AWUSER),  //   input,     width = 5,                  .awuser
		.f2sdram2_AWVALID (f2sdram2_AWVALID), //   input,     width = 1,                  .awvalid
		.f2sdram2_WDATA   (f2sdram2_WDATA),   //   input,   width = 128,                  .wdata
		.f2sdram2_WID     (f2sdram2_WID),     //   input,     width = 4,                  .wid
		.f2sdram2_WLAST   (f2sdram2_WLAST),   //   input,     width = 1,                  .wlast
		.f2sdram2_WREADY  (f2sdram2_WREADY),  //  output,     width = 1,                  .wready
		.f2sdram2_WSTRB   (f2sdram2_WSTRB),   //   input,    width = 16,                  .wstrb
		.f2sdram2_WVALID  (f2sdram2_WVALID),  //   input,     width = 1,                  .wvalid
		.f2sdram2_BID     (f2sdram2_BID),     //  output,     width = 4,                  .bid
		.f2sdram2_BREADY  (f2sdram2_BREADY),  //   input,     width = 1,                  .bready
		.f2sdram2_BRESP   (f2sdram2_BRESP),   //  output,     width = 2,                  .bresp
		.f2sdram2_BVALID  (f2sdram2_BVALID),  //  output,     width = 1,                  .bvalid
		.f2sdram2_RDATA   (f2sdram2_RDATA),   //  output,   width = 128,                  .rdata
		.f2sdram2_RID     (f2sdram2_RID),     //  output,     width = 4,                  .rid
		.f2sdram2_RLAST   (f2sdram2_RLAST),   //  output,     width = 1,                  .rlast
		.f2sdram2_RREADY  (f2sdram2_RREADY),  //   input,     width = 1,                  .rready
		.f2sdram2_RRESP   (f2sdram2_RRESP),   //  output,     width = 2,                  .rresp
		.f2sdram2_RVALID  (f2sdram2_RVALID)   //  output,     width = 1,                  .rvalid
	);

	qsys_top_altera_arria10_hps_io_181_nv5i7wq hps_io (
		.hps_io_phery_emac0_TX_CLK (hps_io_phery_emac0_TX_CLK), //  output,  width = 1, hps_io.hps_io_phery_emac0_TX_CLK
		.hps_io_phery_emac0_TXD0   (hps_io_phery_emac0_TXD0),   //  output,  width = 1,       .hps_io_phery_emac0_TXD0
		.hps_io_phery_emac0_TXD1   (hps_io_phery_emac0_TXD1),   //  output,  width = 1,       .hps_io_phery_emac0_TXD1
		.hps_io_phery_emac0_TXD2   (hps_io_phery_emac0_TXD2),   //  output,  width = 1,       .hps_io_phery_emac0_TXD2
		.hps_io_phery_emac0_TXD3   (hps_io_phery_emac0_TXD3),   //  output,  width = 1,       .hps_io_phery_emac0_TXD3
		.hps_io_phery_emac0_RX_CTL (hps_io_phery_emac0_RX_CTL), //   input,  width = 1,       .hps_io_phery_emac0_RX_CTL
		.hps_io_phery_emac0_TX_CTL (hps_io_phery_emac0_TX_CTL), //  output,  width = 1,       .hps_io_phery_emac0_TX_CTL
		.hps_io_phery_emac0_RX_CLK (hps_io_phery_emac0_RX_CLK), //   input,  width = 1,       .hps_io_phery_emac0_RX_CLK
		.hps_io_phery_emac0_RXD0   (hps_io_phery_emac0_RXD0),   //   input,  width = 1,       .hps_io_phery_emac0_RXD0
		.hps_io_phery_emac0_RXD1   (hps_io_phery_emac0_RXD1),   //   input,  width = 1,       .hps_io_phery_emac0_RXD1
		.hps_io_phery_emac0_RXD2   (hps_io_phery_emac0_RXD2),   //   input,  width = 1,       .hps_io_phery_emac0_RXD2
		.hps_io_phery_emac0_RXD3   (hps_io_phery_emac0_RXD3),   //   input,  width = 1,       .hps_io_phery_emac0_RXD3
		.hps_io_phery_emac0_MDIO   (hps_io_phery_emac0_MDIO),   //   inout,  width = 1,       .hps_io_phery_emac0_MDIO
		.hps_io_phery_emac0_MDC    (hps_io_phery_emac0_MDC),    //  output,  width = 1,       .hps_io_phery_emac0_MDC
		.hps_io_phery_sdmmc_CMD    (hps_io_phery_sdmmc_CMD),    //   inout,  width = 1,       .hps_io_phery_sdmmc_CMD
		.hps_io_phery_sdmmc_D0     (hps_io_phery_sdmmc_D0),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D0
		.hps_io_phery_sdmmc_D1     (hps_io_phery_sdmmc_D1),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D1
		.hps_io_phery_sdmmc_D2     (hps_io_phery_sdmmc_D2),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D2
		.hps_io_phery_sdmmc_D3     (hps_io_phery_sdmmc_D3),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D3
		.hps_io_phery_sdmmc_D4     (hps_io_phery_sdmmc_D4),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D4
		.hps_io_phery_sdmmc_D5     (hps_io_phery_sdmmc_D5),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D5
		.hps_io_phery_sdmmc_D6     (hps_io_phery_sdmmc_D6),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D6
		.hps_io_phery_sdmmc_D7     (hps_io_phery_sdmmc_D7),     //   inout,  width = 1,       .hps_io_phery_sdmmc_D7
		.hps_io_phery_sdmmc_CCLK   (hps_io_phery_sdmmc_CCLK),   //  output,  width = 1,       .hps_io_phery_sdmmc_CCLK
		.hps_io_phery_usb0_DATA0   (hps_io_phery_usb0_DATA0),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA0
		.hps_io_phery_usb0_DATA1   (hps_io_phery_usb0_DATA1),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA1
		.hps_io_phery_usb0_DATA2   (hps_io_phery_usb0_DATA2),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA2
		.hps_io_phery_usb0_DATA3   (hps_io_phery_usb0_DATA3),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA3
		.hps_io_phery_usb0_DATA4   (hps_io_phery_usb0_DATA4),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA4
		.hps_io_phery_usb0_DATA5   (hps_io_phery_usb0_DATA5),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA5
		.hps_io_phery_usb0_DATA6   (hps_io_phery_usb0_DATA6),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA6
		.hps_io_phery_usb0_DATA7   (hps_io_phery_usb0_DATA7),   //   inout,  width = 1,       .hps_io_phery_usb0_DATA7
		.hps_io_phery_usb0_CLK     (hps_io_phery_usb0_CLK),     //   input,  width = 1,       .hps_io_phery_usb0_CLK
		.hps_io_phery_usb0_STP     (hps_io_phery_usb0_STP),     //  output,  width = 1,       .hps_io_phery_usb0_STP
		.hps_io_phery_usb0_DIR     (hps_io_phery_usb0_DIR),     //   input,  width = 1,       .hps_io_phery_usb0_DIR
		.hps_io_phery_usb0_NXT     (hps_io_phery_usb0_NXT),     //   input,  width = 1,       .hps_io_phery_usb0_NXT
		.hps_io_phery_spim1_CLK    (hps_io_phery_spim1_CLK),    //  output,  width = 1,       .hps_io_phery_spim1_CLK
		.hps_io_phery_spim1_MOSI   (hps_io_phery_spim1_MOSI),   //  output,  width = 1,       .hps_io_phery_spim1_MOSI
		.hps_io_phery_spim1_MISO   (hps_io_phery_spim1_MISO),   //   input,  width = 1,       .hps_io_phery_spim1_MISO
		.hps_io_phery_spim1_SS0_N  (hps_io_phery_spim1_SS0_N),  //  output,  width = 1,       .hps_io_phery_spim1_SS0_N
		.hps_io_phery_spim1_SS1_N  (hps_io_phery_spim1_SS1_N),  //  output,  width = 1,       .hps_io_phery_spim1_SS1_N
		.hps_io_phery_trace_CLK    (hps_io_phery_trace_CLK),    //  output,  width = 1,       .hps_io_phery_trace_CLK
		.hps_io_phery_trace_D0     (hps_io_phery_trace_D0),     //  output,  width = 1,       .hps_io_phery_trace_D0
		.hps_io_phery_trace_D1     (hps_io_phery_trace_D1),     //  output,  width = 1,       .hps_io_phery_trace_D1
		.hps_io_phery_trace_D2     (hps_io_phery_trace_D2),     //  output,  width = 1,       .hps_io_phery_trace_D2
		.hps_io_phery_trace_D3     (hps_io_phery_trace_D3),     //  output,  width = 1,       .hps_io_phery_trace_D3
		.hps_io_phery_uart1_RX     (hps_io_phery_uart1_RX),     //   input,  width = 1,       .hps_io_phery_uart1_RX
		.hps_io_phery_uart1_TX     (hps_io_phery_uart1_TX),     //  output,  width = 1,       .hps_io_phery_uart1_TX
		.hps_io_phery_i2c1_SDA     (hps_io_phery_i2c1_SDA),     //   inout,  width = 1,       .hps_io_phery_i2c1_SDA
		.hps_io_phery_i2c1_SCL     (hps_io_phery_i2c1_SCL),     //   inout,  width = 1,       .hps_io_phery_i2c1_SCL
		.hps_io_gpio_gpio1_io5     (hps_io_gpio_gpio1_io5),     //   inout,  width = 1,       .hps_io_gpio_gpio1_io5
		.hps_io_gpio_gpio1_io14    (hps_io_gpio_gpio1_io14),    //   inout,  width = 1,       .hps_io_gpio_gpio1_io14
		.hps_io_gpio_gpio1_io16    (hps_io_gpio_gpio1_io16),    //   inout,  width = 1,       .hps_io_gpio_gpio1_io16
		.hps_io_gpio_gpio1_io17    (hps_io_gpio_gpio1_io17)     //   inout,  width = 1,       .hps_io_gpio_gpio1_io17
	);

endmodule
